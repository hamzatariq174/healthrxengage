{
  "name": "EngageRxHealth",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "messages"
        ]
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -1020,
        300
      ],
      "id": "c7364768-3284-44d1-894f-b9bdd61a7b6d",
      "name": "WhatsApp Trigger",
      "webhookId": "d3978cae-2aca-4553-8ac7-ab89068deabc",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "veB4rHOYF1pDwmEQ",
          "name": "WhatsApp OAuth account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -200,
        1100
      ],
      "id": "c8658913-52a8-461b-ae06-39d1aeb8d119",
      "name": "Embeddings OpenAI",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -280,
        1000
      ],
      "id": "94c05578-ffe9-4391-8980-a8019eceeac5",
      "name": "Calculator",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1320,
        660
      ],
      "id": "22ee2305-077a-4fbd-88cf-c1b2b8ef74ea",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        -420,
        960
      ],
      "id": "651fc4cf-e5d5-4fa4-8c53-02fa34f269be",
      "name": "Web Search",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Tools",
        "height": 400,
        "width": 820
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -460,
        860
      ],
      "id": "ea6235f5-7bfc-42d4-8933-5b64561ab0cc",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Image & Text",
        "height": 280,
        "width": 800,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        -60
      ],
      "id": "7136fe01-1e63-4461-9b22-2d9f2894a65c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Audio",
        "height": 240,
        "width": 800
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        -360
      ],
      "id": "aadaadc5-e928-469f-8618-2fdfaa1f921a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and change the MIME type of binary data\nfor (const item of $input.all()) {\n  // Check if the item has binary data\n  if (item.binary) {\n    // Find the binary property name (assuming there's at least one)\n    const binaryPropertyNames = Object.keys(item.binary);\n    \n    for (const propName of binaryPropertyNames) {\n      // If the MIME type is 'audio/mp3', change it to 'audio/mpeg'\n      if (item.binary[propName].mimeType === 'audio/mp3') {\n        item.binary[propName].mimeType = 'audio/mpeg';\n      }\n    }\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2800,
        420
      ],
      "id": "b86ec243-f5ca-405b-9d08-5280b3177344",
      "name": "Fix Mime Type"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2260,
        760
      ],
      "id": "64ee4855-85a6-48ef-8cb9-b78b697b6aa2",
      "name": "Respond with Text",
      "webhookId": "23834751-5066-48ba-8e19-549680df2b27",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "audio",
        "model": "tts-1-hd",
        "input": "={{ $json.output }}",
        "voice": "nova",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2620,
        420
      ],
      "id": "cf1d0b98-30cd-4866-8c2f-db5a71619bf8",
      "name": "Generate Audio",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b9d1d759-f585-4791-a743-b9d72951e77c",
              "leftValue": "={{ $('WebhookTxt').item.json.body.messages[0].audio }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        440
      ],
      "id": "fa81d490-90d0-43b4-a38d-813e90a0f790",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "219577d5-b028-48fc-90be-980f4171ab68",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1740,
        -320
      ],
      "id": "aa7915e6-e7be-4562-b560-9d7792b4d2bb",
      "name": "Audio Prompt"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "En"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1580,
        -320
      ],
      "id": "0d659fb7-1439-4c73-b090-56ea31f51240",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1420,
        -320
      ],
      "id": "d683207a-45ce-4a03-8e25-2229b7d3673c",
      "name": "Download Audio",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2008Qeys6h1NXTeg",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('WebhookTxt').item.json.body.messages[0].audio.id }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1260,
        -320
      ],
      "id": "b72c8896-b79e-4294-ada3-3b3c9e6f5ab5",
      "name": "Get Audio URL",
      "webhookId": "87caa300-7204-47b5-959a-94f4a8fbf8cf",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c05a7fbf-309a-407e-9fee-7e0b03f4a5c8",
              "name": "text",
              "value": "={{ $json.body.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1140,
        440
      ],
      "id": "f9c18ab5-620f-4639-af36-c2bf346a3ca5",
      "name": "Text Only Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "67552183-de2e-494a-878e-c2948e8cb6bb",
              "name": "text",
              "value": "=# The user provided the following image and text.\n\n## IMAGE CONTENT:\n{{ $json.content }}\n\n## USER MESSAGE:\n{{ $('WebhookTxt').item.json.body.messages[0].image.caption || \"Describe the image\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        20
      ],
      "id": "2af8bf93-e38d-40b2-947b-45c0cb64be37",
      "name": "Image + Text Prompt"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "={{ $('WebhookTxt').item.json.body.messages[0].image.caption || \"describe the image\" }}",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1560,
        20
      ],
      "id": "b0cde631-0110-4345-82aa-336053930395",
      "name": "Analyze Image",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "=httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        20
      ],
      "id": "5536fadd-5bce-404b-87c9-aade3e919e63",
      "name": "Download Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2008Qeys6h1NXTeg",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('WebhookTxt').item.json.body.messages[0].image.id }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1240,
        20
      ],
      "id": "a192c378-28c9-4d1d-a696-3fd982cc5de9",
      "name": "Get Image URL",
      "webhookId": "280bd5de-32d7-4d8f-93d2-e91e3b0bc161",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b7b64446-f1ea-4622-990c-22f3999a8269",
                    "leftValue": "={{ $json.body.messages[0].audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "202af928-a324-411a-bf15-68a349e7bf9e",
                    "leftValue": "={{ $json.body.messages[0].image }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.messages[0].text.body }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "08fd0c80-307e-4f45-b1de-35192ee4ec5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        880,
        320
      ],
      "id": "950ec641-c906-42ad-9802-10870653a163",
      "name": "Check Input Type"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1460,
        660
      ],
      "id": "368494f2-ce93-4e48-95f6-5e22054ec7c6",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "You are an assistant for the pharmaceutical and healthcare industry. Your primary function is to respond to topics directly or indirectly related to medicine, healthcare, pharmaceuticals, treatments, medical conditions, doctor practices, clinical workflows, patient care, or health-related technologies.\n\nYou are also permitted to engage in **light, friendly, professional conversation** (e.g. greetings, small talk, rapport-building) as long as it helps build user trust and does not divert into unrelated domains.\n\nIf the user's message is **completely unrelated** to healthcare or rapport (e.g., general tech, finance, celebrity news, sports, travel, food, entertainment), respond strictly with:\n> 'Unable to process your request.'\n\nAlways prioritize using the internal knowledgebase first. Only reference external or internet-based sources if the internal knowledgebase does not apply.\n\nUSER: {{ $json[\"userMessage\"] }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1340,
        440
      ],
      "id": "9b7c5ff5-0035-4fbe-9e4a-64ea04b8e1fa",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2cd9e57c-b64d-477b-9ac4-ae9f3e58410b",
              "name": "from",
              "value": "={{ $json.body.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -740,
        520
      ],
      "id": "3dd526b4-2b59-4c88-9777-84f8fde2def2",
      "name": "Extract & Clean Phone Number",
      "notes": "Normalize the phone number from incoming data"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CALL CheckUserReady({{ $json.from }});",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -300,
        520
      ],
      "id": "01910fb4-8a7c-44eb-b19a-8ea6db214424",
      "name": "CheckuserExist",
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "mZxx4FWdvBv6w4Wp",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        560,
        320
      ],
      "id": "a89b5cb5-8d90-4464-8de3-cce93ea9630e",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d94fea02-058c-4db5-bc51-6cc1e64e502e",
              "name": "outputStat",
              "value": "={{ $json[0].status }}",
              "type": "string"
            },
            {
              "id": "0655e518-6d40-4293-abea-8d21cff06f31",
              "name": "outputMsg",
              "value": "={{ $json[0].message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        760
      ],
      "id": "810fb4f0-0420-4cb8-ad76-3f3c845d8b07",
      "name": "Validation failed"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2da76809-be87-47f6-bca2-c97f5acba3de",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 100,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "All Pass"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Incomplete"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "14f65c0c-9d51-4279-8b67-3394ef64a064",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 500,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Server Error"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8ad30499-f29d-403d-9711-33ce2ab1d8a6",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Pref Topic"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c083e17f-dbf3-4a55-9dfe-1414531ec3e8",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Pref Freq"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -40,
        520
      ],
      "id": "44a5022a-55bc-421b-8384-c668aa655480",
      "name": "Validation Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.vebmy.com/webhook/masterSendMessage",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3140,
        920
      ],
      "id": "28c9185e-d649-4181-82c8-0a38e470c80d",
      "name": "sendWATxt",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b15d416f-9539-4cc8-bc39-a456787e120f",
              "name": "targRecieve ",
              "value": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
              "type": "string"
            },
            {
              "id": "50f2257f-5bff-4d57-a764-e890a0b75949",
              "name": "msgData",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        420
      ],
      "id": "1de4b9c4-6f4c-4ca5-97f8-0f8125495164",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.vebmy.com/webhook-test/masterSendVoice",
        "sendBody": true,
        "specifyBody": "json",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3180,
        420
      ],
      "id": "144e0bd4-b58e-4654-b025-1e1007909734",
      "name": "sendWAVoice",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b15d416f-9539-4cc8-bc39-a456787e120f",
              "name": "=targRecieve",
              "value": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
              "type": "string"
            },
            {
              "id": "50f2257f-5bff-4d57-a764-e890a0b75949",
              "name": "msgText",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        760
      ],
      "id": "2e5e0673-fe60-4f41-9afa-29e7f32a52ee",
      "name": "textJsonBuilder",
      "notes": "{{ $('WebhookTxt').item.json.body.messages[0].from }}"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "WAInput1",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1120,
        60
      ],
      "id": "841f5b5e-62a1-4eeb-8753-8f52abf8ddda",
      "name": "WebhookTxt",
      "webhookId": "51e1ff17-d9ff-42e0-9103-9106ba73b646"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2100,
        1120
      ],
      "id": "38cb9fc5-be4c-43c8-b318-15e4c97c3903",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2240,
        1120
      ],
      "id": "6ae8e527-4dc7-4c03-b4da-d694c986b013",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={\nstatus: {{ $json.outputStat }},\nquestion: `{{ $json.outputMsg }}`,\nuser input: `{{ $json.body.messages[0].text.body }}`\n}",
        "options": {
          "systemMessage": "You are a validator for WhatsApp survey responses.\n\nInput:\n- status: {{ $json.outputStat }}\n- question: {{ $json.outputMsg }}\n- user input: {{ $json.body.messages[0].text.body }}\n\nYour job is to:\n1. First, detect if the user input is a greeting (such as \"hi\", \"hello\", \"hey\", \"good morning\", \"good afternoon\", etc.).\n   - If it is **only a greeting**, return:\n     { \"status\": 1, \"answer\": \"{{ $json.outputMsg }}\" }\n\n2. If the input contains **both a greeting and a valid answer**, ignore the greeting and process the answer normally.\n\n3. Determine if the input meaningfully answers the question.\n\n4. If the question contains numbered options (e.g. 1. ..., 2. ..., etc.), you must allow natural language variations such as:\n   - \"2 and 4\"\n   - \"I'd like trial results and usage tips\"\n   - \"Give me 1,3, and 5\"\n   - \"Everything except price adjustment\"\n   - \"Only new drug launches and sponsorships\"\n\n5. Extract the intended numeric selections (e.g. \"1,4\") from the input, and map any descriptive phrases to their corresponding numbers when needed.\n\n6. If the input is valid, return:\n   { \"status\": {{ $json.outputStat }}, \"answer\": [cleaned, comma-separated number string] }\n\n7. If the input is unclear, irrelevant, or does not answer the question, return:\n   { \"status\": 500, \"nextQ\": \"Please help us to better understand your needs & serve you better\\n{{ $json.outputMsg }}\" }\n\n🚫 Only return raw, valid JSON — no stringifield objects, no explanations, and no quotes around the object.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2220,
        920
      ],
      "id": "527cd4a7-71d8-4c57-bbf3-05c8d0bf986b",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "jsCode": "const raw = $json.output;\n\n// Step 1: Normalize the fake JSON string (quote the keys)\nconst fixed = raw.replace(/([{,])\\s*(\\w+)\\s*:/g, '$1\"$2\":');\n\nlet result;\ntry {\n  result = JSON.parse(fixed);\n} catch (e) {\n  return [{\n    json: {\n      status: 500,\n      answer: \"Invalid response format\",\n      nextQ: \"\"\n    }\n  }];\n}\n\n// Step 2: Normalize missing fields\nconst normalized = {\n  status: result.status ?? 500,\n  answer: result.answer ?? \"Unable to process your request.\",\n  nextQ: result.nextQ ?? `{{ $(\"ValidationFailMerge1\").outputMsg }}` ?? \"\"\n};\nif(normalized){\n  normalized.nextQ=result.answer+`...\\r\\n`+normalized.nextQ;\n}\nreturn [{ json: normalized }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2600,
        920
      ],
      "id": "697a4952-20f9-4e1b-aa2c-f79b6dd25637",
      "name": "convertToRightObjectType"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Incomplete"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8ad30499-f29d-403d-9711-33ce2ab1d8a6",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Pref Topic"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c083e17f-dbf3-4a55-9dfe-1414531ec3e8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Pref Freq"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d1ae4721-b8f9-4efb-8db5-e0b04c595775",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": 500,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Total Irelevant"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a1203bad-6701-48f1-8e5f-d18b9ba4ddc2",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": 200,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "allGood"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3140,
        1120
      ],
      "id": "78c01c9c-9ac6-4c72-b72b-ea4177eefde5",
      "name": "Validation Switch1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        960,
        840
      ],
      "id": "f94c7473-c251-4eea-a00c-7196aa23df4e",
      "name": "ValidationFailMerge1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9733b5c0-26a2-4c48-8401-0e9c21296a35",
              "name": "output",
              "value": "={{ $json.nextQ }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3940,
        1340
      ],
      "id": "1c254b6e-c8b1-412b-8cdd-1ff886813641",
      "name": "forceQuestToAns"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9623327-8551-4e0f-9087-265676baaa92",
                    "leftValue": "={{ $json.answer }}",
                    "rightValue": "Unable to process your request.",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "More Process"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.answer }}",
                    "rightValue": "Unable to process your request.",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "StraightToWA"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2860,
        1180
      ],
      "id": "b3d472c6-ca3d-43c7-974d-4a79b2df7e57",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "textBody": "={{ $('switchAdminOrUsr').last().json[0].message }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5780,
        1280
      ],
      "id": "e20d61be-9f06-467e-9543-433bedcf5afb",
      "name": "returnToWAClient2",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "textBody": "={{ $json[0].message }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5320,
        1280
      ],
      "id": "3a0a8723-c680-4b71-be4f-66d17c04294e",
      "name": "returnToWAClient3",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "=`{{ $json.targRecieve }}`",
        "textBody": "={{ $json.msgText }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2980,
        720
      ],
      "id": "ce0d516f-88ac-430f-9adb-2590f98f87e7",
      "name": "returnToWAClient1",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "textBody": "={{ $json.answer }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        3080,
        1440
      ],
      "id": "3681dbb9-affb-4e02-adfd-a685860629b5",
      "name": "returnToWAClient4",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "04cae421-6b30-4a03-8b55-d2ef66f43a3a",
              "name": "",
              "value": "={{$('insertUserPref2')}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5540,
        1280
      ],
      "id": "038a50f3-a400-4e3c-b3e1-1e154c7d9fb5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "call ProcessUserEngagementResponse('{{ $('WebhookTxt').item.json.body.messages[0].from }}',{{ $json.status }},'{{ $json.answer }}')",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        3920,
        1100
      ],
      "id": "02611d68-a94f-4c5f-9123-e631b1c30128",
      "name": "insertUserPref2",
      "credentials": {
        "mySql": {
          "id": "mZxx4FWdvBv6w4Wp",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5732dcf-9e76-4db7-b9ec-c4fcedf65cb9",
              "leftValue": "={{ $json[0].status }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4140,
        1100
      ],
      "id": "96718e87-a744-4d2e-bdf3-3753cbb3642d",
      "name": "If1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a318669-a48b-4912-8518-4773a6d8f865",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 500,
                    "operator": {
                      "type": "number",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": 500,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "promptAdmin"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4780,
        1080
      ],
      "id": "fc89bfbe-6f8b-4365-80ca-9960b0b442fa",
      "name": "switchAdminOrUsr"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "textBody": "={{ $json[0].message }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        5260,
        1020
      ],
      "id": "9fb943ce-0577-488d-968b-2fb464909427",
      "name": "returnToWAClient",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        700,
        1460
      ],
      "id": "5befa4c0-2977-4ca4-8f21-23f24041f1cf",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "XU5HUtua5yTZFXGM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WebhookTxt').item.json.body.messages[0].from }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        840,
        1460
      ],
      "id": "eb450e01-786b-457e-a2c0-1ae7a53b5744",
      "name": "Simple Memory2",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=user input: `2 & 3 please`",
        "options": {
          "systemMessage": "You are a strict validator for WhatsApp survey responses.\n\nInstructions:\n1. If the user input contains only a greeting (like \"hi\", \"hello\", \"good morning\", etc.), return `false`.\n2. If the message includes valid numbers (e.g. \"2\", \"1 and 3\", \"2 & 3 please\"), return `true`.\n3. If the message includes both a greeting and valid numbers (e.g. \"hi 2\"), return `true`.\n\nOnly return exactly:\ntrue\nor\nfalse\n\nReturn nothing else. Do not explain. Do not add punctuation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        840,
        1260
      ],
      "id": "d444490f-ecab-4a22-894b-909a886638e9",
      "name": "AI Agent",
      "executeOnce": true
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1640,
        840
      ],
      "id": "bd35196c-8967-4ac6-a907-c44f66ec93cc",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "da6a229e-e1ef-46f0-88ee-22d328d6a01e",
              "leftValue": "={{ $json.output }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1420,
        940
      ],
      "id": "bcfeca0d-55b4-4b64-b493-b61fad380133",
      "name": "hasSelection"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "91299c49-a2c6-4b2e-987d-209dd8d314dd",
              "name": "status",
              "value": "=500",
              "type": "number"
            },
            {
              "id": "cec5f67b-29bc-4446-8e69-f45c634878d1",
              "name": "nextQ",
              "value": "=Please help us to better understand your needs & serve you better.\n{{ $('Validation failed').item.json.outputMsg }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1640,
        1040
      ],
      "id": "98b2a7b4-ba63-48ed-92e4-7433b7ec3163",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "686283197897100",
        "recipientPhoneNumber": "={{ \n  $('WebhookTxt').item.json.body?.body?.messages?.[0]?.from \n  ?? $('WebhookTxt').item.json.body?.messages?.[0]?.from \n  ?? null \n}}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        4300,
        1360
      ],
      "id": "525fceea-3d3c-4ec3-ae9e-61f3e464fbac",
      "name": "returnToWAClient6",
      "credentials": {
        "whatsAppApi": {
          "id": "m9yscEkMqqSYK0iW",
          "name": "WhatsApp account"
        }
      },
      "notes": "{{ $('WAMainInput').item.json.messages[0].from.replace(/[^0-9+]/g, '').replace(/@.*/, '') }}"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "settle",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -900,
        60
      ],
      "id": "5f32244f-9546-4308-96d4-4648b14f61e8",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "settle",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        5360,
        2120
      ],
      "id": "f128515c-6f50-45f8-b1d9-5da22f63b7f6",
      "name": "Respond to Webhook1"
    }
  ],
  "pinData": {
    "Extract & Clean Phone Number": [
      {
        "json": {
          "from": "60168123149"
        }
      }
    ]
  },
  "connections": {
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Extract & Clean Phone Number",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Mime Type": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Audio": {
      "main": [
        [
          {
            "node": "Fix Mime Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Generate Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "textJsonBuilder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Audio Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio URL": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Image + Text Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image URL": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Input Type": {
      "main": [
        [
          {
            "node": "Get Audio URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Image URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Only Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Only Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Web Search": {
      "ai_tool": [
        []
      ]
    },
    "Calculator": {
      "ai_tool": [
        []
      ]
    },
    "Audio Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image + Text Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract & Clean Phone Number": {
      "main": [
        [
          {
            "node": "CheckuserExist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CheckuserExist": {
      "main": [
        [
          {
            "node": "Validation Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Check Input Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation failed": {
      "main": [
        [
          {
            "node": "ValidationFailMerge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation Switch": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Validation failed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation failed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation failed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond with Text": {
      "main": [
        []
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "sendWAVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "textJsonBuilder": {
      "main": [
        [
          {
            "node": "returnToWAClient1",
            "type": "main",
            "index": 0
          },
          {
            "node": "sendWATxt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sendWATxt": {
      "main": [
        []
      ]
    },
    "WebhookTxt": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "ValidationFailMerge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Extract & Clean Phone Number",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "convertToRightObjectType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertToRightObjectType": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ValidationFailMerge1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Validation Switch1": {
      "main": [
        [
          {
            "node": "insertUserPref2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "insertUserPref2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "insertUserPref2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "forceQuestToAns",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "forceQuestToAns": {
      "main": [
        [
          {
            "node": "returnToWAClient6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Validation Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "returnToWAClient4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "returnToWAClient2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insertUserPref2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "switchAdminOrUsr",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switchAdminOrUsr": {
      "main": [
        [
          {
            "node": "returnToWAClient",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "returnToWAClient3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "hasSelection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "hasSelection": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient6": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient2": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient4": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnToWAClient1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6d8fda49-5f99-4de6-8f7b-42fe9e19d49a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "dea1938cc04f435a50048418ca6cce8dc33ee90a8aef1ccbb9a9e258681fc7b0"
  },
  "id": "yjhObezMLr01zFcJ",
  "tags": []
}